# data file for the Fltk User Interface Designer (fluid)
version 1.0305
i18n_type 1
i18n_include "gettext.h"
i18n_function _
header_name {.h}
code_name {.cxx}
decl {\#include "Fl_Text_Buffer_mod.H"} {private local
}

decl {\#include <FL/Fl_Color_Chooser.H>} {private local
}

decl {\#include <FL/fl_show_colormap.H>} {private local
}

decl {\#include "dx_cluster.h"} {private local
}

decl {\#include "flcluster.h"} {private local
}

decl {Fl_Text_Buffer_mod telnet_txt_buffer;} {private local
}

decl {Fl_Text_Buffer_mod telnet_view_buffer;} {private local
}

Function {cbDXC_FontBrowser(Fl_Widget*, void*)} {open private return_type void
} {
  code {Fl_Font font = font_browser->fontNumber();
int size = font_browser->fontSize();
Fl_Color color = font_browser->fontColor();

progStatus.DXC_textcolor = color;
progStatus.DXC_textfont = font;
progStatus.DXC_textsize = size;

DXC_display->textcolor(color);
DXC_display->textfont(font);
DXC_display->textsize(size);
DXC_display->redraw();

reports_header->redraw();

brws_dx_cluster->redraw();
      
font_browser->hide();

dxc_lines();} {}
}

Function {cbDX_FontBrowser(Fl_Widget*, void*)} {open private return_type void
} {
  code {Fl_Font font = font_browser->fontNumber();
int size = font_browser->fontSize();
Fl_Color color = font_browser->fontColor();

progStatus.DXfontcolor = color;
progStatus.DXfontnbr = font;
progStatus.DXfontsize = size;

brws_tcpip_stream->setFont(font);
brws_tcpip_stream->setFontSize(size);
brws_tcpip_stream->setFontColor(color, FTextBase::RECV);
brws_tcpip_stream->redraw();

ed_telnet_cmds->setFont(font);
ed_telnet_cmds->setFontSize(size);
ed_telnet_cmds->setFontColor(color);
ed_telnet_cmds->redraw();

StreamText->textcolor(color);
StreamText->textfont(font);
StreamText->textsize(size);
StreamText->redraw();

brws_dxc_help->color(fl_rgb_color(
    progStatus.DX_Color_R,
    progStatus.DX_Color_G,
    progStatus.DX_Color_B));    
brws_dxc_help->setFont(font);
brws_dxc_help->setFontSize(size);
brws_dxc_help->setFontColor(color, FTextBase::RECV);
brws_dxc_help->redraw();
       
font_browser->hide();

dxcluster_hosts_load();} {}
}

Function {choose_color(Fl_Color & c)} {open private return_type void
} {
  code {unsigned char r, g, b;
Fl::get_color(c, r, g, b);
if (fl_color_chooser("Font color", r, g, b))
    c = fl_rgb_color(r, g, b);} {}
}

Function {dxc_window()} {open
} {
  code {font_browser = new Font_Browser;} {}
  Fl_Window {} {
    label {DX Cluster Spotting} open
    xywh {891 45 680 420} type Double resizable
    code0 {o->resizable(cluster_tabs);}
    code1 {o->size_range(680,420,0,0);} visible
  } {
    Fl_Menu_Bar {} {open
      xywh {0 0 680 22}
    } {
      Submenu mnuFile {
        label File open
        xywh {0 0 70 20}
      } {
        MenuItem mnuExit {
          label {E&xit}
          callback {cb_Exit();}
          xywh {0 0 36 20}
        }
      }
      MenuItem mnu_help {
        label Help
        callback {show_help();}
        xywh {0 0 36 20}
      }
    }
    Fl_Group btn_select_host {
      xywh {0 25 678 50} box ENGRAVED_BOX
      code0 {o->resizable(inp_dxcc_host_url);}
    } {
      Fl_Input inp_dxcc_host_url {
        label {DX HOST hostname/IP}
        callback {progStatus.dxcc_host_url=o->value();
progStatus.changed = true;}
        tooltip {telnet server URL} xywh {5 48 256 22} align 5
        code0 {\#include "flinput2.h"}
        code1 {o->value(progStatus.dxcc_host_url.c_str());}
        class Fl_Input2
      }
      Fl_Button btn_show_host_tab {
        label {@2>}
        callback {cluster_tabs->value(tabDXclusterConfig);
cluster_tabs->redraw();}
        xywh {262 48 20 22}
      }
      Fl_Input inp_dccc_host_port {
        label Port
        callback {progStatus.dxcc_host_port=o->value();
progStatus.changed = true;}
        tooltip {telnet server port} xywh {284 48 50 22} align 5
        code1 {o->value(progStatus.dxcc_host_port.c_str());}
        class Fl_Input2
      }
      Fl_Input inp_dccc_login {
        label {Login as}
        callback {progStatus.dxcc_login=o->value();
progStatus.changed = true;}
        tooltip {login call sign} xywh {335 48 80 22} align 5
        code1 {o->value(progStatus.dxcc_login.c_str());}
        class Fl_Input2
      }
      Fl_Input inp_dxcc_password {
        label Password
        callback {progStatus.dxcc_password = o->value();}
        tooltip {Your login password} xywh {419 48 80 22} align 5
        code0 {o->value(progStatus.dxcc_password.c_str());}
        code1 {o->type(FL_SECRET_INPUT);}
        code2 {inp_dxcc_password->labelsize(FL_NORMAL_SIZE);}
        class Fl_Input2
      }
      Fl_Button btnDXCLUSTERpasswordShow {
        label {?}
        callback {inp_dxcc_password->type(inp_dxcc_password->type() ^ FL_SECRET_INPUT);
inp_dxcc_password->redraw();}
        tooltip {Show password in plain text} xywh {502 48 22 22}
      }
      Fl_Check_Button btn_dxcc_connect {
        label Connect
        callback {progStatus.cluster_connected=o->value();
DXcluster_connect(o->value());}
        tooltip {Connect / Disconnect} xywh {570 33 101 15} down_box DOWN_BOX
        code0 {o->value(progStatus.cluster_connected);}
        code1 {\#include "status.h"}
      }
      Fl_Box lbl_dxc_connected {
        tooltip {Connected State} xywh {539 40 20 20} box DIAMOND_DOWN_BOX color 55 align 8
      }
      Fl_Check_Button btn_dxc_auto_connect {
        label {Auto conn'}
        callback {progStatus.dxc_auto_connect = o->value();
progStatus.changed = true;}
        tooltip {Connect to host when starting FLCLUSTER} xywh {570 54 101 15} down_box DOWN_BOX
        code0 {o->value(progStatus.dxc_auto_connect);}
      }
    }
    Fl_Tabs cluster_tabs {open
      xywh {0 78 685 340} resizable
      code0 {o->resizable(tabDXclusterReports);}
    } {
      Fl_Group tabDXclusterTelNetStream {
        label {TelNet stream}
        xywh {0 100 680 314} hide
        code0 {o->resizable(gp_resize_telnet);}
      } {
        Fl_Group gp_resize_telnet {open
          xywh {2 102 676 276} box ENGRAVED_FRAME resizable
          code0 {o->resizable(brws_tcpip_stream);}
        } {
          Fl_Text_Editor brws_tcpip_stream {
            tooltip {Cluster server command strings} xywh {4 105 668 220} labelsize 13 textfont 13 resizable
            code0 {\#include "FTextView.h"}
            class FTextView
          }
          Fl_Button dxc_macro_1 {
            label m1
            callback dxc_click_m1
            tooltip {DX cluster macro\\nLeft click execute\\nRight click edit} xywh {4 328 80 22}
            code0 {o->label(progStatus.dxcm_label_1.c_str());}
          }
          Fl_Button dxc_macro_2 {
            label m2
            callback dxc_click_m2
            xywh {88 328 80 22}
            code0 {o->label(progStatus.dxcm_label_2.c_str());}
          }
          Fl_Button dxc_macro_3 {
            label m3
            callback dxc_click_m3
            xywh {172 328 80 22}
            code0 {o->label(progStatus.dxcm_label_3.c_str());}
          }
          Fl_Button dxc_macro_4 {
            label m4
            callback dxc_click_m4
            xywh {256 328 80 22}
            code0 {o->label(progStatus.dxcm_label_4.c_str());}
          }
          Fl_Button dxc_macro_5 {
            label m5
            callback dxc_click_m5
            xywh {340 328 80 22}
            code0 {o->label(progStatus.dxcm_label_5.c_str());}
          }
          Fl_Button dxc_macro_6 {
            label m6
            callback dxc_click_m6
            xywh {424 328 80 22}
            code0 {o->label(progStatus.dxcm_label_6.c_str());}
          }
          Fl_Button dxc_macro_7 {
            label m7
            callback dxc_click_m7
            xywh {508 328 80 22}
            code0 {o->label(progStatus.dxcm_label_7.c_str());}
          }
          Fl_Button dxc_macro_8 {
            label m8
            callback dxc_click_m8
            tooltip {DX cluster macro\\nLeft click execute\\nRight click edit} xywh {592 328 80 22}
            code0 {o->label(progStatus.dxcm_label_8.c_str());}
          }
          Fl_Button dxc_macro_9 {
            label m9
            callback dxc_click_m9
            tooltip {DX cluster macro\\nLeft click execute\\nRight click edit} xywh {5 352 80 22}
            code0 {o->label(progStatus.dxcm_label_9.c_str());}
          }
          Fl_Button dxc_macro_10 {
            label m10
            callback dxc_click_m10
            xywh {89 352 80 22}
            code0 {o->label(progStatus.dxcm_label_10.c_str());}
          }
          Fl_Button dxc_macro_11 {
            label m11
            callback dxc_click_m11
            xywh {173 352 80 22}
            code0 {o->label(progStatus.dxcm_label_11.c_str());}
          }
          Fl_Button dxc_macro_12 {
            label m12
            callback dxc_click_m12
            xywh {257 352 80 22}
            code0 {o->label(progStatus.dxcm_label_12.c_str());}
          }
          Fl_Button dxc_macro_13 {
            label m13
            callback dxc_click_m13
            xywh {341 352 80 22}
            code0 {o->label(progStatus.dxcm_label_13.c_str());}
          }
          Fl_Button dxc_macro_14 {
            label m14
            callback dxc_click_m14
            xywh {425 352 80 22}
            code0 {o->label(progStatus.dxcm_label_14.c_str());}
          }
          Fl_Button dxc_macro_15 {
            label m15
            callback dxc_click_m15
            xywh {509 352 80 22}
            code0 {o->label(progStatus.dxcm_label_15.c_str());}
          }
          Fl_Button dxc_macro_16 {
            label m16
            callback dxc_click_m16
            tooltip {DX cluster macro\\nLeft click execute\\nRight click edit} xywh {593 352 80 22}
            code0 {o->label(progStatus.dxcm_label_16.c_str());}
          }
        }
        Fl_Group gp_spot_cmds {open
          xywh {2 380 676 33}
          code0 {o->resizable(inp_dxcluster_cmd);}
        } {
          Fl_Input inp_dxcluster_cmd {
            label {Cmd:}
            callback {DXcluster_submit();}
            tooltip {Command string} xywh {40 386 480 22} labelsize 13 when 8
            class Fl_Input2
          }
          Fl_Button btn_cluster_spot {
            label Spot
            callback {send_DXcluster_spot();}
            tooltip {Send SPOT string to server} xywh {524 386 70 22}
          }
          Fl_Button btn_cluster_submit {
            label Submit
            callback {DXcluster_submit();}
            tooltip {Send command to server} xywh {599 386 70 22}
          }
        }
      }
      Fl_Group tabDXclusterReports {
        label {DX Reports}
        xywh {0 100 680 314} hide
        code0 {o->resizable(brws_dx_cluster);}
      } {
        Fl_Browser reports_header {
          xywh {3 104 671 22} color 52 when 2 textfont 4
        }
        Fl_Browser brws_dx_cluster {
          callback {DXcluster_select();}
          tooltip {Left Click to select SPOT} xywh {3 126 671 260} type Hold align 18 textfont 4 resizable
        }
        Fl_Button btn_dxc_cluster_clear {
          label Clear
          callback {brws_dx_cluster->clear();}
          tooltip {Clear parsed data stream} xywh {328 390 72 22}
        }
        Fl_Check_Button brws_order {
          label {New entries in first line}
          callback {progStatus.dxc_topline = o->value();
dxc_lines();
progStatus.changed=true;}
          xywh {31 393 186 15} down_box DOWN_BOX when 1
          code0 {o->value(progStatus.dxc_topline);}
        }
        Fl_Button btn_cluster_spot2 {
          label Spot
          callback {send_DXcluster_spot();}
          tooltip {Send SPOT string to server} xywh {585 390 70 22}
        }
        Fl_Output txtTOD {
          xywh {475 390 90 22}
        }
        Fl_Box box_keepalive {
          xywh {450 392 18 18} box DIAMOND_DOWN_BOX
        }
        Fl_Button btn_dxc_cluster_align {
          label {Align Cols}
          callback {//dxc_lines();
dxc_column_widths();}
          tooltip {Align columns after dialog resize} xywh {221 390 84 22}
        }
      }
      Fl_Group tabDXclusterConfig {
        label {Cluster Config}
        tooltip {Initialization strings for telnet cluster host} xywh {0 100 680 314}
      } {
        Fl_Group {} {open
          xywh {13 123 475 130} box ENGRAVED_BOX
          code0 {o->resizable(brws_dxcluster_hosts);}
        } {
          Fl_Browser brws_dxcluster_hosts {
            label Hosts selected
            xywh {20 142 380 100} type Hold align 1 textfont 4 resizable
            code0 {static int widths[]={o->w()*6/10, o->w()*2/10, o->w()*2/10, 0 };}
            code1 {o->column_widths(widths);}
            code2 {o->column_char(':');}
            code3 {dxcluster_hosts_load();}
          }
          Fl_Group {} {open
            xywh {405 128 70 121} box ENGRAVED_BOX
          } {
            Fl_Button btn_dxcluster_hosts_select {
              label Select
              callback dxcluster_hosts_select
              tooltip {Select highlighted DX cluster host} xywh {412 137 54 22}
            }
            Fl_Button btn_dxcluster_hosts_add {
              label Add
              callback dxcluster_hosts_add
              tooltip {Add current DX cluster host} xywh {412 165 54 22}
            }
            Fl_Button btn_dxcluster_hosts_delete {
              label Delete
              callback dxcluster_hosts_delete
              tooltip {Delete highlighted DX cluster host} xywh {412 193 54 22}
            }
            Fl_Button btn_dxcluster_servers {
              label Srvrs
              callback dxcluster_servers
              tooltip {Server List} xywh {412 222 54 22}
            }
          }
        }
        Fl_Group {} {open
          xywh {13 261 475 130} box ENGRAVED_BOX
          code0 {o->resizable(ed_telnet_cmds);}
        } {
          Fl_Text_Editor ed_telnet_cmds {
            label {Cluster Server Setup Cmds} selected
            tooltip {Cluster server command strings} xywh {20 280 380 100} textfont 13 resizable
            class FTextEdit
          }
          Fl_Group {} {open
            xywh {405 275 70 108} box ENGRAVED_BOX
          } {
            Fl_Button btn_dxcluster_hosts_load_setup {
              label Load
              callback dxcluster_hosts_load_setup
              tooltip {Load Cluster Setup Commands} xywh {412 282 54 22}
            }
            Fl_Button btn_dxcluster_hosts_save_setup {
              label Save
              callback dxcluster_hosts_save_setup
              tooltip {Save Cluster Setup Commands} xywh {412 311 54 22}
            }
            Fl_Button btn_dxcluster_hosts_send_setup {
              label Send
              callback dxcluster_hosts_send_setup
              tooltip {Send Commands to Cluster Server} xywh {412 340 54 22}
            }
          }
        }
        Fl_Check_Button btn_spot_when_logged {
          label {Spot when logged}
          callback {progStatus.spot_when_logged = o->value();
progStatus.changed = true;}
          tooltip {Create DX spot when logging contact} xywh {510 122 146 15} down_box DOWN_BOX
          code0 {o->value(progStatus.spot_when_logged);}
        }
        Fl_Check_Button btn_dxc_hertz {
          label {Report [0..99 Hz]}
          callback {progStatus.dxc_hertz = o->value();
progStatus.changed = true;}
          tooltip {Add [0..99] Hz WF value to DX report notes} xywh {510 145 146 15} down_box DOWN_BOX
          code0 {o->value(progStatus.dxc_hertz);}
        }
      }
      Fl_Group tabDXmacros {
        label Macros open
        tooltip {Initialization strings for telnet cluster host} xywh {0 100 680 314} hide
      } {
        Fl_Input mlabel_1 {
          label {M 1}
          callback {progStatus.dxcm_label_1=o->value();
dxc_macro_1->label(progStatus.dxcm_label_1.c_str());
progStatus.changed=true;}
          xywh {38 127 75 24}
          code0 {o->value(progStatus.dxcm_label_1.c_str());}
        }
        Fl_Input mtext_1 {
          callback {progStatus.dxcm_text_1=o->value();
progStatus.changed=true;}
          xywh {119 127 217 24} align 17
          code0 {o->value(progStatus.dxcm_text_1.c_str());}
          class Fl_Input2
        }
        Fl_Input mlabel_2 {
          label {M 2}
          callback {progStatus.dxcm_label_2=o->value();
dxc_macro_2->label(progStatus.dxcm_label_2.c_str());
progStatus.changed=true;}
          xywh {38 160 75 24}
          code0 {o->value(progStatus.dxcm_label_2.c_str());}
        }
        Fl_Input mtext_2 {
          callback {progStatus.dxcm_text_2=o->value();
progStatus.changed=true;}
          xywh {119 160 217 24} align 17
          code0 {o->value(progStatus.dxcm_text_2.c_str());}
          class Fl_Input2
        }
        Fl_Input mlabel_3 {
          label {M 3}
          callback {progStatus.dxcm_label_3=o->value();
dxc_macro_3->label(progStatus.dxcm_label_3.c_str());
progStatus.changed=true;}
          xywh {38 192 75 24}
          code0 {o->value(progStatus.dxcm_label_3.c_str());}
        }
        Fl_Input mtext_3 {
          callback {progStatus.dxcm_text_3=o->value();
progStatus.changed=true;}
          xywh {119 192 217 24} align 17
          code0 {o->value(progStatus.dxcm_text_3.c_str());}
          class Fl_Input2
        }
        Fl_Input mlabel_4 {
          label {M 4}
          callback {progStatus.dxcm_label_4=o->value();
dxc_macro_4->label(progStatus.dxcm_label_4.c_str());
progStatus.changed=true;}
          xywh {38 224 75 24}
          code0 {o->value(progStatus.dxcm_label_4.c_str());}
        }
        Fl_Input mtext_4 {
          callback {progStatus.dxcm_text_4=o->value();
progStatus.changed=true;}
          xywh {119 224 217 24} align 17
          code0 {o->value(progStatus.dxcm_text_4.c_str());}
          class Fl_Input2
        }
        Fl_Input mlabel_5 {
          label {M 5}
          callback {progStatus.dxcm_label_5=o->value();
dxc_macro_5->label(progStatus.dxcm_label_5.c_str());
progStatus.changed=true;}
          xywh {36 257 75 24}
          code0 {o->value(progStatus.dxcm_label_5.c_str());}
        }
        Fl_Input mtext_5 {
          callback {progStatus.dxcm_text_5=o->value();
progStatus.changed=true;}
          xywh {117 257 217 24} align 17
          code0 {o->value(progStatus.dxcm_text_5.c_str());}
          class Fl_Input2
        }
        Fl_Input mlabel_6 {
          label {M 6}
          callback {progStatus.dxcm_label_6=o->value();
dxc_macro_6->label(progStatus.dxcm_label_6.c_str());
progStatus.changed=true;}
          xywh {36 290 75 24}
          code0 {o->value(progStatus.dxcm_label_6.c_str());}
        }
        Fl_Input mtext_6 {
          callback {progStatus.dxcm_text_6=o->value();
progStatus.changed=true;}
          xywh {117 290 217 24} align 17
          code0 {o->value(progStatus.dxcm_text_6.c_str());}
          class Fl_Input2
        }
        Fl_Input mlabel_7 {
          label {M 7}
          callback {progStatus.dxcm_label_7=o->value();
dxc_macro_7->label(progStatus.dxcm_label_7.c_str());
progStatus.changed=true;}
          xywh {36 322 75 24}
          code0 {o->value(progStatus.dxcm_label_7.c_str());}
        }
        Fl_Input mtext_7 {
          callback {progStatus.dxcm_text_7=o->value();
progStatus.changed=true;}
          xywh {117 322 217 24} align 17
          code0 {o->value(progStatus.dxcm_text_7.c_str());}
          class Fl_Input2
        }
        Fl_Input mlabel_8 {
          label {M 8}
          callback {progStatus.dxcm_label_8=o->value();
dxc_macro_8->label(progStatus.dxcm_label_8.c_str());
progStatus.changed=true;}
          xywh {36 354 75 24}
          code0 {o->value(progStatus.dxcm_label_8.c_str());}
        }
        Fl_Input mtext_8 {
          callback {progStatus.dxcm_text_8=o->value();
progStatus.changed=true;}
          xywh {119 354 217 24} align 17
          code0 {o->value(progStatus.dxcm_text_8.c_str());}
          class Fl_Input2
        }
        Fl_Input mlabel_9 {
          label {M 9}
          callback {progStatus.dxcm_label_9=o->value();
dxc_macro_9->label(progStatus.dxcm_label_9.c_str());
progStatus.changed=true;}
          xywh {380 127 75 24}
          code0 {o->value(progStatus.dxcm_label_9.c_str());}
        }
        Fl_Input mtext_9 {
          callback {progStatus.dxcm_text_9=o->value();
progStatus.changed=true;}
          xywh {458 127 217 24} align 17
          code0 {o->value(progStatus.dxcm_text_9.c_str());}
          class Fl_Input2
        }
        Fl_Input mlabel_10 {
          label {M 10}
          callback {progStatus.dxcm_label_10=o->value();
dxc_macro_10->label(progStatus.dxcm_label_10.c_str());
progStatus.changed=true;}
          xywh {380 160 75 24}
          code0 {o->value(progStatus.dxcm_label_10.c_str());}
        }
        Fl_Input mtext_10 {
          callback {progStatus.dxcm_text_10=o->value();
progStatus.changed=true;}
          xywh {458 160 217 24} align 17
          code0 {o->value(progStatus.dxcm_text_10.c_str());}
          class Fl_Input2
        }
        Fl_Input mlabel_11 {
          label {M 11}
          callback {progStatus.dxcm_label_11=o->value();
dxc_macro_11->label(progStatus.dxcm_label_11.c_str());
progStatus.changed=true;}
          xywh {380 192 75 24}
          code0 {o->value(progStatus.dxcm_label_11.c_str());}
        }
        Fl_Input mtext_11 {
          callback {progStatus.dxcm_text_11=o->value();
progStatus.changed=true;}
          xywh {458 192 217 24} align 17
          code0 {o->value(progStatus.dxcm_text_11.c_str());}
          class Fl_Input2
        }
        Fl_Input mlabel_12 {
          label {M 12}
          callback {progStatus.dxcm_label_12=o->value();
dxc_macro_12->label(progStatus.dxcm_label_12.c_str());
progStatus.changed=true;}
          xywh {380 224 75 24}
          code0 {o->value(progStatus.dxcm_label_12.c_str());}
        }
        Fl_Input mtext_12 {
          callback {progStatus.dxcm_text_12=o->value();
progStatus.changed=true;}
          xywh {458 224 217 24} align 17
          code0 {o->value(progStatus.dxcm_text_12.c_str());}
          class Fl_Input2
        }
        Fl_Input mlabel_13 {
          label {M 13}
          callback {progStatus.dxcm_label_13=o->value();
dxc_macro_13->label(progStatus.dxcm_label_13.c_str());
progStatus.changed=true;}
          xywh {380 257 75 24}
          code0 {o->value(progStatus.dxcm_label_13.c_str());}
        }
        Fl_Input mtext_13 {
          callback {progStatus.dxcm_text_13=o->value();
progStatus.changed=true;}
          xywh {456 257 217 24} align 17
          code0 {o->value(progStatus.dxcm_text_13.c_str());}
          class Fl_Input2
        }
        Fl_Input mlabel_14 {
          label {M 14}
          callback {progStatus.dxcm_label_14=o->value();
dxc_macro_14->label(progStatus.dxcm_label_14.c_str());
progStatus.changed=true;}
          xywh {380 290 75 24}
          code0 {o->value(progStatus.dxcm_label_14.c_str());}
        }
        Fl_Input mtext_14 {
          callback {progStatus.dxcm_text_14=o->value();
progStatus.changed=true;}
          xywh {456 290 217 24} align 17
          code0 {o->value(progStatus.dxcm_text_14.c_str());}
          class Fl_Input2
        }
        Fl_Input mlabel_15 {
          label {M 15}
          callback {progStatus.dxcm_label_15=o->value();
dxc_macro_15->label(progStatus.dxcm_label_15.c_str());
progStatus.changed=true;}
          xywh {380 322 75 24}
          code0 {o->value(progStatus.dxcm_label_15.c_str());}
        }
        Fl_Input mtext_15 {
          callback {progStatus.dxcm_text_15=o->value();
progStatus.changed=true;}
          xywh {456 322 217 24} align 17
          code0 {o->value(progStatus.dxcm_text_15.c_str());}
          class Fl_Input2
        }
        Fl_Input mlabel_16 {
          label {M 16}
          callback {progStatus.dxcm_label_16=o->value();
dxc_macro_16->label(progStatus.dxcm_label_16.c_str());
progStatus.changed=true;}
          xywh {380 354 75 24}
          code0 {o->value(progStatus.dxcm_label_16.c_str());}
        }
        Fl_Input mtext_16 {
          callback {progStatus.dxcm_text_16=o->value();
progStatus.changed=true;}
          xywh {456 354 217 24} align 17
          code0 {o->value(progStatus.dxcm_text_16.c_str());}
          class Fl_Input2
        }
        Fl_Button btn_dxcluster_ar_help {
          label {AR ?}
          callback dxcluster_ar_help
          tooltip {AR Commands} xywh {232 385 55 22}
        }
        Fl_Button btn_dxcluster_cc_help {
          label {CC ?}
          callback dxcluster_cc_help
          tooltip {CC Commands} xywh {317 385 55 22}
        }
        Fl_Button btn_dxcluster_dx_help {
          label {DX ?}
          callback dxcluster_dx_help
          tooltip {Spider Commands} xywh {402 385 55 22}
        }
        Fl_Box bx1 {
          label Label
          xywh {38 103 75 22}
        }
        Fl_Box bx2 {
          label {Macro Text}
          xywh {119 103 217 22}
        }
        Fl_Box bx3 {
          label Label
          xywh {380 103 75 22}
        }
        Fl_Box bx4 {
          label {Macro Text}
          xywh {458 103 217 22}
        }
      }
      Fl_Group tabIOconfig {
        label {I/O config}
        xywh {0 100 680 315} hide
        code0 {o->resizable(gp_resize_io);}
      } {
        Fl_Group {} {
          label {Fldigi/Flrig Interface} open
          xywh {10 110 389 150} box ENGRAVED_FRAME align 17
        } {
          Fl_Check_Button btn_connect_to_fldigi {
            label {Connect to Fldigi}
            callback {progStatus.connect_to_fldigi = o->value();}
            xywh {25 143 142 15} down_box DOWN_BOX when 1
            code0 {o->value(progStatus.connect_to_fldigi);}
          }
          Fl_Input inp_fldigi_address {
            label {Fldigi Socket Address:}
            callback {progStatus.fldigi_address=o->value();}
            xywh {25 179 357 24} align 5
            code0 {o->value(progStatus.fldigi_address.c_str());}
          }
          Fl_Input inp_fldigi_port {
            label {Fldigi Socket Port:}
            callback {progStatus.fldigi_port=o->value();}
            xywh {25 225 123 24} align 5
            code0 {o->value(progStatus.fldigi_port.c_str());}
          }
          Fl_Box lbl_fldigi_connected {
            label Connected
            tooltip {Connected State} xywh {185 140 20 20} box DIAMOND_DOWN_BOX color 55 align 8
          }
        }
        Fl_Group {} {
          label {RF/AF Spotting}
          xywh {400 110 269 296} box ENGRAVED_BOX align 17
        } {
          Fl_Counter intPSKsweetspot {
            label {PSK sweet spot}
            callback {progStatus.PSKsweetspot=(int)o->value();}
            xywh {420 149 119 22} align 8 minimum 500 maximum 2500 step 10 value 1500
            code0 {o->value(progStatus.PSKsweetspot);}
            code1 {o->lstep(100);}
          }
          Fl_Check_Button btn_PSK_on_USB {
            label {PSK mode is USB on xcvr}
            callback {progStatus.USB = o->value();}
            xywh {435 184 198 15} down_box DOWN_BOX
            code0 {o->value(progStatus.USB);}
          }
          Fl_Counter intCWsweetspot {
            label {CW sweet spot}
            callback {progStatus.CWsweetspot=(int)o->value();}
            xywh {420 213 119 22} align 8 minimum 500 maximum 2500 step 10 value 1500
            code0 {o->value(progStatus.CWsweetspot);}
            code1 {o->lstep(100);}
          }
          Fl_Check_Button btn_cw_mode_is_USB {
            label {CW mode is USB on xcvr}
            callback {progStatus.USBCW = o->value();
if (progStatus.USBCW) {
  progStatus.LSBCW = 0;
  btn_cw_mode_is_LSB->value(0);
  btn_cw_mode_is_CW->value(0);
}}
            xywh {435 249 198 15} down_box DOWN_BOX
            code0 {o->value(progStatus.USBCW);}
          }
          Fl_Check_Button btn_cw_mode_is_LSB {
            label {CW mode is LSB on xcvr}
            callback {progStatus.LSBCW = o->value();
if (progStatus.LSBCW) {
  progStatus.USBCW = 0;
  btn_cw_mode_is_USB->value(0);
  btn_cw_mode_is_CW->value(0);
}}
            xywh {435 277 198 15} down_box DOWN_BOX
            code0 {o->value(progStatus.LSBCW);}
          }
          Fl_Check_Button btn_cw_mode_is_CW {
            label {CW mode is CW on xcvr}
            callback {if (o->value()) {
  progStatus.USBCW = 0;
  progStatus.LSBCW = 0;
  btn_cw_mode_is_USB->value(0);
  btn_cw_mode_is_LSB->value(0);
}}
            xywh {435 305 198 15} down_box DOWN_BOX
            code0 {o->value(!progStatus.LSBCW && !progStatus.USBCW);}
          }
          Fl_Check_Button btn_rtty_is_mark {
            label {RTTY tuned to Mark Freq}
            callback {progStatus.useMARKfreq = o->value();}
            xywh {435 370 198 15} down_box DOWN_BOX
            code0 {o->value(!progStatus.useMARKfreq);}
          }
          Fl_Counter intRTTYsweetspot {
            label {RTTY sweet spot}
            callback {progStatus.RTTYsweetspot=(int)o->value();}
            xywh {420 334 119 22} align 8 minimum 500 maximum 2500 step 10 value 1500
            code0 {o->value(progStatus.RTTYsweetspot);}
            code1 {o->lstep(100);}
          }
        }
        Fl_Group {} {
          label {Server Help URLs}
          xywh {10 261 389 145} box ENGRAVED_BOX align 17
        } {
          Fl_Input serversURL {
            label {Srvrs:}
            callback {progStatus.serversURL=o->value();}
            tooltip {enter INTERNAL to use local html} xywh {58 285 337 24}
            code0 {o->value(progStatus.serversURL.c_str());}
          }
          Fl_Input AR_help_URL {
            label {AR:}
            callback {progStatus.AR_help_URL=o->value();}
            tooltip {enter INTERNAL to use local html} xywh {58 313 337 24}
            code0 {o->value(progStatus.AR_help_URL.c_str());}
          }
          Fl_Input CC_help_URL {
            label {CC:}
            callback {progStatus.CC_help_URL=o->value();}
            tooltip {enter INTERNAL to use local html} xywh {58 342 337 24}
            code0 {o->value(progStatus.CC_help_URL.c_str());}
          }
          Fl_Input DX_help_URL {
            label {DX:}
            callback {progStatus.DX_help_URL=o->value();}
            tooltip {enter INTERNAL to use local html} xywh {58 371 337 24}
            code0 {o->value(progStatus.DX_help_URL.c_str());}
          }
        }
        Fl_Group gp_resize_io {
          xywh {10 407 660 5}
        } {}
      }
      Fl_Group tabUserConfig {
        label {User Config} open
        xywh {0 100 680 315} hide
        code0 {o->resizable(grp_resize_uc);}
      } {
        Fl_Group {} {
          label {Personal Info} open
          xywh {5 106 315 160} box ENGRAVED_BOX align 17
        } {
          Fl_Input inp_myCall {
            label Call
            callback {progStatus.myCall = o->value();}
            xywh {71 135 160 22} when 1
            code0 {o->value(progStatus.myCall.c_str());}
          }
          Fl_Input inp_myName {
            label Name
            callback {progStatus.myName = o->value();}
            xywh {71 167 160 22} when 1
            code0 {o->value(progStatus.myName.c_str());}
          }
          Fl_Input inp_myQth {
            label Qth
            callback {progStatus.myQth = o->value();}
            xywh {71 199 160 22} when 1
            code0 {o->value(progStatus.myQth.c_str());}
          }
          Fl_Input inp_myLocator {
            label Locator
            callback {progStatus.myLocator = o->value();}
            xywh {71 232 160 22} when 1
            code0 {o->value(progStatus.myLocator.c_str());}
          }
          Fl_Button btn_send_name {
            label Update
            callback {send_name();}
            tooltip {update change to server} xywh {243 167 70 22}
          }
          Fl_Button btn_send_qth {
            label Update
            callback {send_qth();}
            tooltip {update change to server} xywh {243 199 70 22}
          }
          Fl_Button btn_send_qra {
            label Update
            callback {send_qra();}
            tooltip {update change to server} xywh {243 232 70 22}
          }
        }
        Fl_Group {} {open
          xywh {5 268 670 137} box ENGRAVED_FRAME align 21
        } {
          Fl_Output DXC_display {
            label {Report Browser}
            xywh {24 293 184 25} align 5
            code0 {o->textfont(progStatus.DXC_textfont);o->textsize(progStatus.DXC_textsize);}
            code2 {o->value("DX de W1HKJ-1");}
            code3 {o->redraw();}
          }
          Fl_Button btn_DXC_font {
            label Font
            callback {font_browser->fontNumber(progStatus.DXC_textfont);
font_browser->fontSize(progStatus.DXC_textsize);
font_browser->fontColor(progStatus.DXC_textcolor);
font_browser->fontFilter(Font_Browser::FIXED_WIDTH);
font_browser->callback(cbDXC_FontBrowser);
font_browser->show();}
            xywh {213 293 86 25}
            code0 {\#include "font_browser.h"}
          }
          Fl_Button btnDXCdefault_colors_font {
            label Default
            callback {progStatus.DXC_textfont = FL_COURIER;
progStatus.DXC_textsize = 14;
progStatus.DXC_textcolor = FL_BLACK;
progStatus.DXC_even_color = 7;
progStatus.DXC_odd_color = 246;

DXC_display->textsize(progStatus.DXC_textsize);
DXC_display->textcolor(progStatus.DXC_textcolor);
DXC_display->textfont(progStatus.DXC_textfont);

DXC_display->redraw();}
            xywh {305 293 86 25}
          }
          Fl_Button btn_DXC_even_lines {
            label {Even Lines}
            callback {progStatus.DXC_even_color = fl_show_colormap((Fl_Color)progStatus.DXC_even_color);
o->color(progStatus.DXC_even_color);
o->redraw();}
            xywh {213 324 86 25} color 55
            code0 {o->color(progStatus.DXC_even_color);}
            code1 {\#include <FL/fl_show_colormap.H>}
          }
          Fl_Button btn_DXC_odd_lines {
            label {Odd Lines}
            callback {progStatus.DXC_odd_color = fl_show_colormap((Fl_Color)progStatus.DXC_odd_color);
o->color(progStatus.DXC_odd_color);
o->redraw();}
            xywh {305 324 86 25} color 246
            code0 {o->color(progStatus.DXC_odd_color);}
          }
          Fl_Input StreamText {
            label {Stream Text}
            xywh {24 363 184 25} align 5
            code0 {o->value("DX de W1HKJ...");}
            code1 {o->color(fl_rgb_color(progStatus.DX_Color_R, progStatus.DX_Color_G, progStatus.DX_Color_B));}
            code2 {o->textfont(progStatus.DXfontnbr); o->textsize(progStatus.DXfontsize); o->textcolor(progStatus.DXfontcolor);}
          }
          Fl_Button btnDXcolor {
            label {Bg color}
            callback {uchar r, g, b;
r = progStatus.DX_Color_R;
g = progStatus.DX_Color_G;
b = progStatus.DX_Color_B;

if (!fl_color_chooser("DX Color", r, g, b))
    return;

progStatus.DX_Color_R = r;
progStatus.DX_Color_G = g;
progStatus.DX_Color_B = b;

StreamText->color(fl_rgb_color(r,g,b));
StreamText->redraw();

brws_tcpip_stream->color(
	StreamText->color(),
	fl_contrast(progStatus.DXfontcolor, StreamText->color()));


brws_tcpip_stream->redraw();

brws_dxcluster_hosts->color(fl_rgb_color(
    progStatus.DX_Color_R,
    progStatus.DX_Color_G,
    progStatus.DX_Color_B));
brws_dxcluster_hosts->textcolor(progStatus.DXfontcolor);
brws_dxcluster_hosts->textfont(progStatus.DXfontnbr);
brws_dxcluster_hosts->textsize(progStatus.DXfontsize);
brws_dxcluster_hosts->redraw();

brws_dxc_help->color(fl_rgb_color(r,g,b));
brws_dxc_help->setFont(progStatus.DXfontnbr);
brws_dxc_help->setFontSize(progStatus.DXfontsize);
brws_dxc_help->setFontColor(progStatus.DXfontcolor, FTextBase::RECV);
brws_dxc_help->redraw();
    
ed_telnet_cmds->color(fl_rgb_color(r,g,b));
ed_telnet_cmds->redraw();

dxcluster_hosts_load();}
            xywh {213 363 86 25}
          }
          Fl_Button btnDXfont {
            label Font
            callback {font_browser->fontNumber(progStatus.DXfontnbr);

font_browser->fontSize(progStatus.DXfontsize);

font_browser->fontColor(progStatus.DXfontcolor);

font_browser->fontFilter(Font_Browser::FIXED_WIDTH);

font_browser->callback(cbDX_FontBrowser);

brws_tcpip_stream->color(
	StreamText->color(),
	fl_contrast(progStatus.DXfontcolor, StreamText->color()));

font_browser->show();}
            xywh {305 363 86 25}
          }
          Fl_Button btnDXalt_color {
            label {Alt Color}
            callback {choose_color(progStatus.DXalt_color);

o->labelcolor(progStatus.DXalt_color);
o->redraw_label();

brws_tcpip_stream->setFontColor(progStatus.DXalt_color, FTextBase::XMIT);

brws_tcpip_stream->redraw();}
            tooltip {Color for outgoing telnet text} xywh {397 362 86 25}
            code0 {o->labelcolor(progStatus.DXalt_color);}
          }
          Fl_Button btnDXdefault_colors_font {
            label Default
            callback {progStatus.DX_Color_R = 255;
progStatus.DX_Color_G = 255;
progStatus.DX_Color_B = 255;

progStatus.DXfontnbr = FL_COURIER;
progStatus.DXfontsize = 14;
progStatus.DXfontcolor = FL_BLACK;
progStatus.DXalt_color = fl_rgb_color(200, 0, 0);
btnDXalt_color->labelcolor(progStatus.DXalt_color);
btnDXalt_color->redraw_label();

brws_tcpip_stream->color(fl_rgb_color(
    progStatus.DX_Color_R,
    progStatus.DX_Color_G,
    progStatus.DX_Color_B));
brws_tcpip_stream->setFont(progStatus.DXfontnbr);
brws_tcpip_stream->setFontSize(progStatus.DXfontsize);
brws_tcpip_stream->setFontColor(progStatus.DXfontcolor, FTextBase::RECV);
brws_tcpip_stream->setFontColor(progStatus.DXalt_color, FTextBase::XMIT);
brws_tcpip_stream->redraw();

ed_telnet_cmds->color(fl_rgb_color(
    progStatus.DX_Color_R,
    progStatus.DX_Color_G,
    progStatus.DX_Color_B));
ed_telnet_cmds->setFont(progStatus.DXfontnbr);
ed_telnet_cmds->setFontSize(progStatus.DXfontsize);
ed_telnet_cmds->setFontColor(progStatus.DXfontcolor);
ed_telnet_cmds->redraw();

brws_dxc_help->color(fl_rgb_color(
    progStatus.DX_Color_R,
    progStatus.DX_Color_G,
    progStatus.DX_Color_B));
brws_dxc_help->setFont(progStatus.DXfontnbr);
brws_dxc_help->setFontSize(progStatus.DXfontsize);
brws_dxc_help->setFontColor(progStatus.DXfontcolor, FTextBase::RECV);
brws_dxc_help->redraw();

StreamText->color(fl_rgb_color(
    progStatus.DX_Color_R,
    progStatus.DX_Color_G,
    progStatus.DX_Color_B));
StreamText->textcolor(progStatus.DXfontcolor);
StreamText->redraw();

dxcluster_hosts_load();

font_browser->hide();}
            xywh {491 362 86 25}
          }
        }
        Fl_Group {} {
          label {Keepalive signal} open
          xywh {325 106 175 160} box ENGRAVED_BOX align 17
        } {
          Fl_Round_Button btn_zero_keepalive {
            label never
            callback {progStatus.keepalive = 0;
o->value(1);
btn_one_keepalive->value(0);
btn_five_keepalive->value(0);
btn_ten_keepalive->value(0);}
            tooltip {disable keep alive signal} xywh {340 138 151 26} down_box ROUND_DOWN_BOX
            code0 {o->value(progStatus.keepalive == 0);}
          }
          Fl_Round_Button btn_one_keepalive {
            label {every minute}
            callback {progStatus.keepalive = 1;
o->value(1);
btn_zero_keepalive->value(0);
btn_five_keepalive->value(0);
btn_ten_keepalive->value(0);}
            tooltip {send keepalive signal every minute} xywh {340 166 151 26} down_box ROUND_DOWN_BOX
            code0 {o->value(progStatus.keepalive == 1);}
          }
          Fl_Round_Button btn_five_keepalive {
            label {every 5 minutes}
            callback {progStatus.keepalive = 5;
o->value(1);
btn_zero_keepalive->value(0);
btn_one_keepalive->value(0);
btn_ten_keepalive->value(0);}
            tooltip {send keepalive signal every 5 minutes} xywh {340 194 151 26} down_box ROUND_DOWN_BOX
            code0 {o->value(progStatus.keepalive == 5);}
          }
          Fl_Round_Button btn_ten_keepalive {
            label {every 10 minutes}
            callback {progStatus.keepalive = 10;
o->value(1);
btn_zero_keepalive->value(0);
btn_one_keepalive->value(0);
btn_five_keepalive->value(0);}
            tooltip {send keepalive signal every 10 minutes} xywh {340 224 151 25} down_box ROUND_DOWN_BOX
            code0 {o->value(progStatus.keepalive == 10);}
          }
        }
        Fl_Group grp_misc {
          label Miscellaneous
          xywh {505 106 170 160} box ENGRAVED_BOX align 17
        } {
          Fl_Check_Button btn_tooltips {
            label {Enable Tooltips}
            callback {progStatus.tooltips=o->value();
Fl_Tooltip::enable(progStatus.tooltips);}
            xywh {525 143 78 15} down_box DOWN_BOX value 1
            code0 {\#include <FL/Fl_Tooltip.H>}
            code1 {o->value(progStatus.tooltips);}
          }
        }
        Fl_Group grp_resize_uc {open
          xywh {5 405 670 7} resizable
        } {}
      }
      Fl_Group tabDXclusterHelp {
        label {Cluster Help}
        xywh {0 100 680 314} hide
        code0 {o->resizable(brws_dxc_help);}
      } {
        Fl_Text_Editor brws_dxc_help {
          tooltip {Cluster server command strings} xywh {3 104 673 281} labelsize 13 textfont 13 resizable
          class FTextView
        }
        Fl_Button btn_dxc_help_query {
          label {Get Help}
          callback {dxc_help_query();}
          tooltip {Get Help from cluster server} xywh {441 388 70 22}
        }
        Fl_Input inp_help_string {
          label {Help on:}
          callback {dxc_help_query();}
          tooltip {Leave blank for general help
Enter subject, e.g. DX} xywh {265 388 172 22} labelsize 13 when 8
          class Fl_Input2
        }
        Fl_Button btn_dxc_help_clear {
          label Clear
          callback {dxc_help_clear()}
          tooltip {Clear help panel} xywh {517 388 71 22}
        }
      }
    }
  }
}
